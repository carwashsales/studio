
{
  "entities": {
    "InventoryItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InventoryItem",
      "type": "object",
      "description": "Represents an item in the carwash inventory.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the inventory item."
        },
        "category": {
          "type": "string",
          "description": "Category of the item (e.g., Soaps, Chemicals, Tools)."
        },
        "quantity": {
          "type": "number",
          "description": "Current quantity of the item in stock."
        },
        "location": {
          "type": "string",
          "description": "The location where the item is stored."
        }
      },
      "required": [
        "name",
        "quantity"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order for new supplies.",
      "properties": {
        "supplier": {
          "type": "string",
          "description": "Name of the supplier."
        },
        "date": {
          "type": "string",
          "description": "Date the order was placed.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the order (e.g., pending, processing, shipped, delivered)."
        },
        "total": {
          "type": "number",
          "description": "Total amount of the order."
        }
      },
      "required": [
        "supplier",
        "date",
        "status",
        "total"
      ]
    },
    "CarWashSale": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CarWashSale",
      "type": "object",
      "description": "Represents a car wash sale transaction.",
      "properties": {
        "service": {
          "type": "string",
          "description": "Type of car wash service provided (e.g., basic, deluxe, premium)."
        },
        "date": {
          "type": "string",
          "description": "Date and time of the sale transaction.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Price of the car wash service."
        }
      },
      "required": [
        "service",
        "date",
        "amount"
      ]
    },
    "Price": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Price",
      "type": "object",
      "description": "Represents the price of a car wash service.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Type of car wash service (e.g., basic, deluxe, premium)."
        },
        "description": {
          "type": "string",
          "description": "A short description of the service."
        },
        "price": {
          "type": "number",
          "description": "Price of the car wash service."
        }
      },
      "required": [
        "name",
        "price"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "inventory",
        "schema": {
          "$ref": "#/entities/InventoryItem"
        },
        "description": "Stores inventory items. Each document represents a specific item in the carwash inventory."
      },
      {
        "path": "orders",
        "schema": {
          "$ref": "#/entities/Order"
        },
        "description": "Stores orders for new supplies. Each document represents a specific order."
      },
      {
        "path": "sales",
        "schema": {
          "$ref": "#/entities/CarWashSale"
        },
        "description": "Stores car wash sale transactions.  Each document represents a single sale transaction."
      },
      {
        "path": "services",
        "schema": {
          "$ref": "#/entities/Price"
        },
        "description": "Stores pricing information for car wash services. Each document represents the price for a specific service."
      }
    ],
    "reasoning": "The Firestore structure is designed to manage inventory, orders, sales, and pricing for the CleanSweep Inventory application. It prioritizes authorization independence and data clarity. User authentication is handled via email/password and anonymous login. Since all data is essentially private to the application's management, a single level collection is used for each major entity. This simplifies security rules, as access control is primarily based on user authentication rather than complex hierarchical ownership. CarWashSales and Prices are global data. The other collections could be scoped under an organization ID."
  }
}
