
{
  "entities": {
    "InventoryItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InventoryItem",
      "type": "object",
      "description": "Represents an item in the carwash inventory.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the inventory item."
        },
        "category": {
          "type": "string",
          "description": "Category of the item (e.g., Soaps, Chemicals, Tools)."
        },
        "quantity": {
          "type": "number",
          "description": "Current quantity of the item in stock."
        },
        "location": {
          "type": "string",
          "description": "The location where the item is stored."
        }
      },
      "required": [
        "name",
        "quantity"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order for new supplies.",
      "properties": {
        "supplier": {
          "type": "string",
          "description": "Name of the supplier."
        },
        "date": {
          "type": "string",
          "description": "Date the order was placed.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the order (e.g., pending, processing, shipped, delivered)."
        },
        "total": {
          "type": "number",
          "description": "Total amount of the order."
        }
      },
      "required": [
        "supplier",
        "date",
        "status",
        "total"
      ]
    },
    "CarWashSale": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CarWashSale",
      "type": "object",
      "description": "Represents a car wash sale transaction.",
      "properties": {
        "service": {
          "type": "string",
          "description": "Name of the car wash service provided."
        },
        "staffName": {
            "type": "string",
            "description": "Name of the staff member who performed the service."
        },
        "carSize": {
            "type": "string",
            "description": "Size of the car (e.g., small, medium, large)."
        },
        "date": {
          "type": "string",
          "description": "Date and time of the sale transaction.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Price of the car wash service."
        },
        "commission": {
            "type": "number",
            "description": "Commission earned by the staff member for the service."
        },
        "hasCoupon": {
            "type": "boolean",
            "description": "Whether a coupon was used for the sale."
        },
        "paymentMethod": {
            "type": "string",
            "description": "Method of payment (e.g., coupon, cash, machine, not-paid)."
        },
        "waxAddOn": {
            "type": "boolean",
            "description": "Whether the wax add-on was included."
        },
        "isPaid": {
            "type": "boolean",
            "description": "Whether the service has been paid for."
        }
      },
      "required": [
        "service",
        "staffName",
        "date",
        "amount",
        "commission",
        "hasCoupon",
        "waxAddOn",
        "isPaid"
      ]
    },
    "Price": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Price",
      "type": "object",
      "description": "Represents the dynamic pricing for a car wash service.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the service (e.g., Full Wash)."
        },
        "needsSize": {
          "type": "boolean",
          "description": "Whether this service requires a car size to determine the price."
        },
        "hasCoupon": {
          "type": "boolean",
          "description": "Whether this service can be paid for with a coupon."
        },
        "order": {
          "type": "number",
          "description": "A number to sort the services for display."
        },
        "prices": {
          "type": "object",
          "description": "A map of prices for different car sizes or a default price.",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "price": { "type": "number" },
              "commission": { "type": "number" },
              "couponCommission": { "type": "number" }
            },
            "required": ["price", "commission"]
          }
        }
      },
      "required": [
        "name",
        "needsSize",
        "hasCoupon",
        "prices",
        "order"
      ]
    },
    "Staff": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Staff",
      "type": "object",
      "description": "Represents a staff member.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the staff member."
        }
      },
      "required": [
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "inventory",
        "schema": {
          "$ref": "#/entities/InventoryItem"
        },
        "description": "Stores inventory items. Each document represents a specific item in the carwash inventory."
      },
      {
        "path": "orders",
        "schema": {
          "$ref": "#/entities/Order"
        },
        "description": "Stores orders for new supplies. Each document represents a specific order."
      },
      {
        "path": "sales",
        "schema": {
          "$ref": "#/entities/CarWashSale"
        },
        "description": "Stores car wash sale transactions.  Each document represents a single sale transaction."
      },
      {
        "path": "services",
        "schema": {
          "$ref": "#/entities/Price"
        },
        "description": "Stores pricing information for car wash services. Each document represents the price for a specific service."
      },
      {
        "path": "staff",
        "schema": {
          "$ref": "#/entities/Staff"
        },
        "description": "Stores staff members. Each document represents a single staff member."
      }
    ],
    "reasoning": "The Firestore structure is designed to manage inventory, orders, sales, pricing and staff for the CleanSweep Inventory application. It prioritizes authorization independence and data clarity. User authentication is handled via email/password and anonymous login. Since all data is essentially private to the application's management, a single level collection is used for each major entity. This simplifies security rules, as access control is primarily based on user authentication rather than complex hierarchical ownership."
  }
}
